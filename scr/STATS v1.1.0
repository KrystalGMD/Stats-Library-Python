def mean(nums):
    return sum(nums) / len(nums)

def median(nums):
    sorted_numbers = sorted(nums)
    n = len(sorted_numbers)

    if n % 2 == 0:
        mid1 = n // 2
        mid2 = mid1 - 1
        median = (sorted_numbers[mid1] + sorted_numbers[mid2]) / 2
    else:
        median = sorted_numbers[n // 2]

    return median

def mode(nums):
    mode_dict = {}
    for number in nums:
        if number in mode_dict:
            mode_dict[number] += 1
        else:
            mode_dict[number] = 1

    max_count = max(mode_dict.values())
    modes = [number for number, count in mode_dict.items() if count == max_count]

    return modes[0] if len(modes) == 1 else modes[0]

def range_of(nums):
    return max(nums) - min(nums)

def variance(nums):
    m = mean(nums)
    return sum((x - m) ** 2 for x in nums) / len(nums)

def standard_deviation(nums):
    return variance(nums) ** 0.5

def frequency(nums):
    freq_dict = {}
    for number in nums:
        if number in freq_dict:
            freq_dict[number] += 1
        else:
            freq_dict[number] = 1
    return freq_dict

def mid_range(nums):
    return (min(nums) + max(nums)) / 2

def sum_of_squares(nums):
    return sum(x ** 2 for x in nums)
